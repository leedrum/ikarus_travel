package components

import (
  "github.com/leedrum/ikarus_travel/locales"
  "github.com/leedrum/ikarus_travel/model"
  "github.com/leedrum/ikarus_travel/views/icons"
)

templ AdminLayout(title string) {
	<!DOCTYPE html>
	<html lang="en">
		@Header(title)
		<body>
			<main class="min-h-screen w-full">
				<button data-drawer-target="default-sidebar" data-drawer-toggle="default-sidebar" aria-controls="default-sidebar" type="button" class="inline-flex items-center p-2 mt-2 ms-3 text-sm text-gray-500 rounded-lg sm:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600">
					<span class="sr-only">Open sidebar</span>
					<svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
					<path clip-rule="evenodd" fill-rule="evenodd" d="M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z"></path>
					</svg>
				</button>

				if ctx.Value("user") != nil {
          <aside id="default-sidebar" class="fixed top-0 left-0 z-40 w-64 h-screen transition-transform -translate-x-full sm:translate-x-0" aria-label="Sidebar">
            <div class="h-full px-3 py-4 overflow-y-auto bg-gray-50 dark:bg-gray-800">
                <ul class="space-y-2 font-medium">
                  <li>
                      <a href="#" class="flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group">
                        <span class="ms-3">{ title }</span>
                      </a>
                  </li>

                  <li>
                    <button type="button" class="flex items-center w-full p-2 text-base text-gray-900 transition duration-75 rounded-lg group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700"
                      aria-controls="dropdown-menu-users" data-collapse-toggle="dropdown-menu-users">
                      @icons.User()
                      <span class="flex-1 ms-3 text-left rtl:text-right whitespace-nowrap">{ locales.Translate(ctx, "users") }</span>
                      @icons.ArrowDown()
                    </button>

                    <ul id="dropdown-menu-users" class="hidden py-2 space-y-2">
                      if ctx.Value("user").(model.User).Role == model.RoleAdmin {
                        <li>
                          <a href="/admin/users"
                            class="flex items-center w-full p-2 text-gray-900 transition duration-75 rounded-lg pl-11 group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700">
                            { locales.Translate(ctx, "users") }
                          </a>
                        </li>
                        <li>
                          <a href="/admin/users/new"
                            class="flex items-center w-full p-2 text-gray-900 transition duration-75 rounded-lg pl-11 group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700">
                            { locales.Translate(ctx, "create") }
                          </a>
                        </li>
                      }
                      <li>
                        <a href="/admin/users/password"
                          class="flex items-center w-full p-2 text-gray-900 transition duration-75 rounded-lg pl-11 group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700">
                          { locales.Translate(ctx, "password_reset.change_password") }
                        </a>
                      </li>
                    </ul>
                  </li>
                  <li>
                      <a href="/admin/hotels" class="flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group">
                        @icons.Hotel()
                        <span class="flex-1 ms-3 whitespace-nowrap">{ locales.Translate(ctx, "hotel") }</span>
                      </a>
                  </li>
                  <li>
                      <a href="/admin/tours" class="flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group">
                        @icons.Tour()
                        <span class="flex-1 ms-3 whitespace-nowrap">{ locales.Translate(ctx, "tour") }</span>
                      </a>
                  </li>
                  <li>
                    <button type="button" class="flex items-center w-full p-2 text-base text-gray-900 transition duration-75 rounded-lg group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700" aria-controls="dropdown-example" data-collapse-toggle="dropdown-example">
                      @icons.Reservation()
                      <span class="flex-1 ms-3 text-left rtl:text-right whitespace-nowrap">{ locales.Translate(ctx, "reservation") }</span>
                      @icons.ArrowDown()
                    </button>
                    <ul id="dropdown-example" class="hidden py-2 space-y-2">
                      if ctx.Value("user").(model.User).Role == model.RoleAdmin {
                        <li>
                          <a href="/admin/reservations"
                            class="flex items-center w-full p-2 text-gray-900 transition duration-75 rounded-lg pl-11 group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700">
                            { locales.Translate(ctx, "list_reservation") }
                          </a>
                        </li>
                      }
                      <li>
                        <a href="/reservations/mine"
                          class="flex items-center w-full p-2 text-gray-900 transition duration-75 rounded-lg pl-11 group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700">
                          { locales.Translate(ctx, "my_reservation") }
                        </a>
                      </li>
                      <li>
                        <a href="/reservations/new"
                          class="flex items-center w-full p-2 text-gray-900 transition duration-75 rounded-lg pl-11 group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700">
                          { locales.Translate(ctx, "create") }
                        </a>
                      </li>
                    </ul>
                  </li>
                  if ctx.Value("user") != nil {
                    <li>
                      <a href="/logout" class="flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group">
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path d="M20 12L8 12M20 12L16 16M20 12L16 8M9 4H7C5.34315 4 4 5.34315 4 7V17C4 18.6569 5.34315 20 7 20H9" stroke="#383838" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                        <span class="flex-1 ms-3 whitespace-nowrap">{ locales.Translate(ctx, "logout") }</span>
                      </a>
                    </li>
                  } else {
                    <li>
                      <a href="/login" class="flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group">
                        <svg class="flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 16">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 8h11m0 0L8 4m4 4-4 4m4-11h3a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-3"/>
                        </svg>
                        <span class="flex-1 ms-3 whitespace-nowrap">{ locales.Translate(ctx, "login") }</span>
                      </a>
                    </li>
                  }
                </ul>
            </div>
          </aside>
        }

        if ctx.Value("user") != nil {
          <div class="p-4 sm:ml-64">
            <div class="p-4 border-2 border-gray-200 border-dashed rounded-lg dark:border-gray-700">
              <div class="mt-6 w-full flex justify-center items-center flex-col">
                { children... }
              </div>
            </div>
          </div>
        } else {
          <div class="p-4">
            <div class="p-4 border-2 border-gray-200 border-dashed rounded-lg dark:border-gray-700">
              <div class="mt-6 w-full flex justify-center items-center flex-col">
                { children... }
              </div>
            </div>
          </div>
        }
			</main>
		</body>
		@Footer()
	</html>
}
