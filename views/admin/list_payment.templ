package admin

import (
  "strconv"
  "time"

  "github.com/leedrum/ikarus_travel/model"
  "github.com/leedrum/ikarus_travel/views/icons"
  "github.com/leedrum/ikarus_travel/locales"
  "github.com/leedrum/ikarus_travel/internal"
)

templ ListPayments(payments []model.Payment) {
  if len(payments) == 0 {
    <div><i>Empty payments</i></div>
  } else {
    <div class="w-full">
      <div class="mx-auto w-full overflow-x-auto">
        <div class="w-full my-2" id="error-area"></div>
        <div class="w-full my-2" id="success-area"></div>
        <table class="w-full" style="min-width: 900px;">
          <thead>
            <tr>
              <th class="px-6 py-3 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">ID</th>
              <th class="px-6 py-3 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                @icons.User()
              </th>
              <th class="px-6 py-3 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                @icons.Money()
              </th>
              <th class="px-6 py-3 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                @icons.Clock()
              </th>
              <th class="px-6 py-3 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                @icons.Edit()
              </th>
              <th class="px-6 py-3 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                @icons.Action()
              </th>
            </tr>
          </thead>
          <tbody>
            for _, payment := range payments {
              <tr class="border-b border-gray-200">
                <td class="px-6 py-4 whitespace-no-wrap text-sm leading-5 font-medium text-gray-900">
                  { strconv.Itoa(payment.ID) }
                </td>
                <td class="px-6 py-4 whitespace-no-wrap text-sm leading-5 text-gray-500">
                  { payment.User.FullName }
                </td>
                <td class="px-6 py-4 whitespace-no-wrap text-sm leading-5 text-gray-500">
                  { internal.FormatMoney(payment.Amount) } { payment.GetCurrency() }
                </td>
                <td class="px-6 py-4 whitespace-no-wrap text-sm leading-5 text-gray-500">
                  { payment.CreatedAt.Format(time.RFC1123) }
                </td>
                <td class="px-6 py-4 whitespace-no-wrap text-sm leading-5 text-gray-500">
                  { payment.Note }
                </td>
                <td class="px-6 py-4 whitespace-no-wrap text-sm leading-5 text-gray-500">
                  if ctx.Value("user").(model.User).Role == model.RoleAdmin || ctx.Value("user").(model.User).ID == payment.UserID {
                    <form
                      hx-delete={ "/reservations/" + strconv.Itoa(payment.ReservationID) +"/payments/" + strconv.Itoa(payment.ID) }
                      hx-confirm={ locales.Translate(ctx, "are_you_sure") }
                      hx-target="closest tr"
                      hx-swap="outerHTML swap:1s">
                      <button type="submit" class="text-red-600 hover:text-red-900">
                        @icons.Delete()
                      </button>
                    </form>
                  }
                </td>
              </tr>
            }
          </tbody>
        </table>
      </div>
    </div>
  }
}
